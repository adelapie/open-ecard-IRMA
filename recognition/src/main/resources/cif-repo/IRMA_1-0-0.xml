<?xml version="1.0" encoding="UTF-8"?>
<iso:CardInfo xmlns:iso="urn:iso:std:iso-iec:24727:tech:schema"
			  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			  xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema"
			  xsi:schemaLocation="urn:iso:std:iso-iec:24727:tech:schema https://ws.openecard.org/schema/CardInfo.xsd">
	<iso:CardType>
		<iso:ObjectIdentifier>https://www.irmacard.org/irma-card</iso:ObjectIdentifier>
		<iso:SpecificationBodyOrIssuer>
			IRMA Card, Radboud University Nijmegen
		</iso:SpecificationBodyOrIssuer>
		<iso:CardTypeName xml:lang="EN">IRMA</iso:CardTypeName>
		<iso:Version>
			<iso:Major>0</iso:Major>
			<iso:Minor>7</iso:Minor>
			<iso:SubMinor>2</iso:SubMinor>
		</iso:Version>
		<iso:Status>Final Release</iso:Status>
		<iso:Date>2011-11-25</iso:Date>
	</iso:CardType>
	<iso:CardIdentification>
		<!--
			For the recognition of an IRMA card the content of
			the application list is inspected. However, we
			complete the section above for completeness.
		-->
		<iso:ATR>
			<iso:TS>
				<iso:Value>3B</iso:Value>
				<iso:Mask>FF</iso:Mask>
			</iso:TS>
			<iso:T0>
				<iso:Value>FF</iso:Value>
				<iso:Mask>FF</iso:Mask>
			</iso:T0>
			<iso:InterfaceBytes>
				<iso:Tx1>
					<iso:TAi>
						<iso:Value>96</iso:Value>
						<iso:Mask>FF</iso:Mask>
					</iso:TAi>
					<iso:TBi>
						<iso:Value>00</iso:Value>
						<iso:Mask>FF</iso:Mask>
					</iso:TBi>
					<iso:TCi>
						<iso:Value>FF</iso:Value>
						<iso:Mask>FF</iso:Mask>
					</iso:TCi>
					<iso:TDi>
						<iso:Value>81</iso:Value>
						<iso:Mask>FF</iso:Mask>
					</iso:TDi>
				</iso:Tx1>
				<iso:Tx2>
					<iso:TDi>
						<iso:Value>31</iso:Value>
						<iso:Mask>FF</iso:Mask>
					</iso:TDi>
				</iso:Tx2>
				<iso:Tx3>
					<iso:TAi>
						<iso:Value>FE</iso:Value>
						<iso:Mask>FF</iso:Mask>
					</iso:TAi>
					<iso:TBi>
						<iso:Value>4D</iso:Value>
						<iso:Mask>FF</iso:Mask>
					</iso:TBi>
				</iso:Tx3>
				<iso:Tx4>
					<iso:TAi>
						<iso:Value>00</iso:Value>
						<iso:Mask>00</iso:Mask>
					</iso:TAi>
				</iso:Tx4>
			</iso:InterfaceBytes>
		</iso:ATR>

		<!--
			1. For the recognition of an IRMA card the
			application list is read and the following AIDs are
			expected: 			
			
			- #1: IRMA      - 49524D4163617264
		-->

		<!-- 1. Reading the application list -->

		<!-- The command (0x801006000014) is used to retrieve the list of
		     applications in the IRMA card.
		-->

		<iso:CharacteristicFeature>
			<!-- Read the list of applications loaded -->
			<iso:CardCall>
				<iso:CommandAPDU>801006000014</iso:CommandAPDU>
				<iso:ResponseAPDU>
					<iso:Body>
						<iso:MatchingData>
							<iso:Length>14</iso:Length>
							<iso:MatchingValue>09F849524D4163617264FFFFFFFFFFFFFF00AA00</iso:MatchingValue>
						</iso:MatchingData>
					</iso:Body>
					<iso:Trailer>9000</iso:Trailer>
				</iso:ResponseAPDU>
			</iso:CardCall>
		</iso:CharacteristicFeature>
	</iso:CardIdentification>


	<iso:ApplicationCapabilities>
		<iso:ImplicitlySelectedApplication>F849524D4163617264</iso:ImplicitlySelectedApplication>
		
		<!-- =============== -->
		<!-- CardApplication -->
		<!-- ............... -->
		<!--      IRMA       -->
		<!-- =============== -->
		<iso:CardApplication>
			<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
			<iso:InterfaceProtocol>urn:iso:std:iso-iec:7816:-3:protocols:T-equals-1</iso:InterfaceProtocol>
			<iso:ApplicationIdentifier>F849524D4163617264</iso:ApplicationIdentifier>
			<iso:ApplicationName>IRMA</iso:ApplicationName>

			<!-- As there are only standardized card application services, there are no
				 CardApplicationServiceInfo elements. -->

			<!-- ======================== -->
			<!-- IRMA: CardApplicationACL -->
			<!-- ======================== -->


			<iso:CardApplicationACL>

				<!-- IRMA: CardApplicationServiceAccess -->

				<iso:AccessRule>
					<iso:CardApplicationServiceName>CardApplicationServiceAccess</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:APIAccessEntryPoint>Initialize</iso:APIAccessEntryPoint>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
				<iso:AccessRule>
					<iso:CardApplicationServiceName>CardApplicationServiceAccess</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:APIAccessEntryPoint>Terminate</iso:APIAccessEntryPoint>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
				<iso:AccessRule>
					<iso:CardApplicationServiceName>CardApplicationServiceAccess</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:APIAccessEntryPoint>CardApplicationPath</iso:APIAccessEntryPoint>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>

				<!-- ======================== -->
				<!-- IRMA: ConnectionService  -->
				<!-- ======================== -->

				<iso:AccessRule>
					<iso:CardApplicationServiceName>ConnectionService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:ConnectionServiceAction>CardApplicationConnect</iso:ConnectionServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
				<iso:AccessRule>
					<iso:CardApplicationServiceName>ConnectionService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:ConnectionServiceAction>CardApplicationDisconnect</iso:ConnectionServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
								<!--
								CardApplicationStartSession
								and
								CardApplicationEndSession
								are NOT allowed.  -->

				<!-- ============================ -->
				<!-- IRMA: CardApplicationService -->
				<!-- ============================ -->

				<iso:AccessRule>
					<iso:CardApplicationServiceName>CardApplicationService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:CardApplicationServiceAction>CardApplicationList</iso:CardApplicationServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
				
								<!--
								CardApplicationCreate,
								CardApplicationDelete,
								CardApplicationServiceList,
								CardApplicationServiceCreate,
								CardApplicationServiceLoad,
								CardApplicationServiceDelete,
								CardApplicationSericeDescribe,
								ExecuteAction
								are NOT allowed.  -->

				<!-- ====================== -->
				<!-- IRMA: NamedDataService -->
				<!-- ====================== -->

								<!--
								DataSetList,
								DataSetCreate,
								DataSelect,
								DataSetDelete,
								DSIList,
								DSICreate,
								DSIDelete,
								DSIWrite,
								DSIRead,
								are NOT allowed.  -->

				<!-- ========================== -->
				<!-- IRMA: CryptographicService -->
				<!-- ========================== -->

				<iso:AccessRule>
					<iso:CardApplicationServiceName>CryptographicService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:CryptographicServiceAction>Encipher</iso:CryptographicServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
				<iso:AccessRule>
					<iso:CardApplicationServiceName>CryptographicService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:CryptographicServiceAction>Decipher</iso:CryptographicServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
				<iso:AccessRule>
					<iso:CardApplicationServiceName>CryptographicService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:CryptographicServiceAction>GetRandom</iso:CryptographicServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
				<iso:AccessRule>
					<iso:CardApplicationServiceName>CryptographicService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:CryptographicServiceAction>Hash</iso:CryptographicServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
				<iso:AccessRule>
					<iso:CardApplicationServiceName>CryptographicService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:CryptographicServiceAction>Sign</iso:CryptographicServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
				<iso:AccessRule>
					<iso:CardApplicationServiceName>CryptographicService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:CryptographicServiceAction>VerifySignature</iso:CryptographicServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
				<iso:AccessRule>
					<iso:CardApplicationServiceName>CryptographicService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:CryptographicServiceAction>VerifyCertificate</iso:CryptographicServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>

				<!-- ================================= -->
				<!-- IRMA: DifferentialIdentityService -->
				<!-- ================================= -->

								<!--
								DIDCreate,
								DIDUpdate,
								DIDDelete
								are NOT allowed.  -->
				<iso:AccessRule>
					<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:DifferentialIdentityServiceAction>DIDList</iso:DifferentialIdentityServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
				<iso:AccessRule>
					<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:DifferentialIdentityServiceAction>DIDGet</iso:DifferentialIdentityServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
				<iso:AccessRule>
					<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:DifferentialIdentityServiceAction>DIDAuthenticate</iso:DifferentialIdentityServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>

				<!-- ========================== -->
				<!-- IRMA: AuthorizationService -->
				<!-- ========================== -->

				<!-- ACLModify is NOT allowed.  -->

				<iso:AccessRule>
					<iso:CardApplicationServiceName>AuthorizationService</iso:CardApplicationServiceName>
					<iso:Action>
						<iso:AuthorizationServiceAction>ACLList</iso:AuthorizationServiceAction>
					</iso:Action>
					<iso:SecurityCondition>
						<iso:always>true</iso:always>
					</iso:SecurityCondition>
				</iso:AccessRule>
			</iso:CardApplicationACL>


			<!-- ============================= -->
			<!-- IRMA: Differential Identities -->
			<!-- ============================= -->
			<!--PIN.CH-->
			<iso:DIDInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DifferentialIdentity>
					<iso:DIDName>PIN.CH</iso:DIDName>
					<iso:DIDProtocol>urn:oid:1.3.162.15480.3.0.9</iso:DIDProtocol>
					<!--PIN Compare-->
					<iso:DIDMarker>
						<iso:PinCompareMarker
							Protocol="urn:oid:1.3.162.15480.3.0.9">
							<iso:PinRef>
								<iso:KeyRef>01</iso:KeyRef>
							</iso:PinRef>
							<iso:PasswordAttributes>
								<!-- See [eGK-1#9.1.7]. -->
								<iso:pwdFlags>needs-padding</iso:pwdFlags>
								<iso:pwdType>iso9564-1</iso:pwdType>
								<iso:minLength>6</iso:minLength> <!-- See [eGK-2#6.2.7] -->
								<iso:storedLength>8</iso:storedLength>
								<iso:maxLength>8</iso:maxLength>
								<iso:padChar>FF</iso:padChar>
							</iso:PasswordAttributes>
							<!--
								The different states may be distinguished by calling the GET PIN STATUS
								function according to [eGK-1#15.6.4]:

								CL ='80' - as it is a proprietary command
								INS='20' - just as VERIFY
								P1 ='00'
								P2 ='01' - Key Reference of the PIN (as <iso:KeyRef>01</iso:KeyRef> is specified above)

								The status of the PIN is indicated in the response of the GET PIN STATUS command
								(cf. [eGK-1#15.6.4.2]), where according to [eGK-2#6.2.7] there are four states to distinguish:
								- regularPassword - means that the PIN is operational (Response=63Cx, where x is RetryCounter)
								- Leer–PIN_1 (LeerPIN1) - transport state, which can be resumed with CHANGE REFERENCE DATA with P1='01' (Response=62C7)
								- Leer–PIN_2 (LeerPIN2) - transport state, which can be resumed with CHANGE REFERENCE DATA with P1='00' and OldSecret='20FF FFFF FFFF FFFF' (Response=62C4)
								- Transport–PIN_0000 (TransportPIN0000) - transport state, which can be resumed with CHANGE REFERENCE DATA with P1='00' and OldSecret='2400 00FF FFFF FFFF'  (Response=62CF)
							-->

							<iso:StateInfo>
								<iso:StateRecognition>
									<iso:CardCall>
										<iso:CommandAPDU>80200001</iso:CommandAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>62C7</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.CH_LeerPIN1</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>62C4</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.CH_LeerPIN2</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>62CF</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.CH_TransportPIN0000</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>9000</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.CH_regularPassword-verified</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>63C3</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.CH_regularPassword-RC3</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>63C2</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.CH_regularPassword-RC2</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>63C1</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.CH_regularPassword-RC1</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>63C0</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.CH_blocked</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
									</iso:CardCall>
								</iso:StateRecognition>

								<!-- Start state to trigger recognition -->
								<iso:State StateName="PIN.CH_start" StateClass="RecognitionNecessary" />

								<iso:State StateName="PIN.CH_LeerPIN1" StateClass="NotOperational">
									<iso:StateTransition TargetState="PIN.CH_regularPassword-RC3">
										<!-- As specified in [eGK-2#6.2.7] the transition from the transport state to the operational
											 state (regularPassword) is performed using a CHANGE REFERENCE DATA with P1='01' (cf. [eGK-1#15.6.1.2]):
											 CL ='00' -
											 INS='24' - CHANGE REFERENCE DATA
											 P1 ='01' -
											 P2 ='01' - Key Reference of the PIN (as <iso:KeyRef>01</iso:KeyRef> is specified above)
											 Data = operational PIN, which must be captured and appended to CommandAPDU below

											 This step is realized by invoking the ModifyVerificationData-function defined in [eCard-6].
										-->
										<iso:FixedProcedure>
											<iso:CardCall>
												<iso:APICall>
													<iso:ModifyVerificationData>
														<iso:SlotHandle></iso:SlotHandle>
														<iso:InputUnit>
															<iso:PinInput>
																<iso:Index>0</iso:Index>
																<iso:PasswordAttributes>
																	<!-- See [eGK-1#9.1.7]. -->
																	<iso:pwdFlags>needs-padding</iso:pwdFlags>
																	<iso:pwdType>iso9564-1</iso:pwdType>
																	<iso:minLength>6</iso:minLength> <!-- See [eGK-2#6.2.7] -->
																	<iso:storedLength>8</iso:storedLength>
																	<iso:maxLength>8</iso:maxLength>
																	<iso:padChar>FF</iso:padChar>
																</iso:PasswordAttributes>
															</iso:PinInput>
														</iso:InputUnit>
														<iso:Template>00240101</iso:Template>
													</iso:ModifyVerificationData>
												</iso:APICall>
												<iso:APIResponse>
													<iso:ModifyVerificationDataResponse Profile="http://www.bsi.bund.de/ecard/api/1.1">
														<dss:Result>
															<dss:ResultMajor>http://www.bsi.bund.de/ecard/api/1.1/resultmajor#ok</dss:ResultMajor>
														</dss:Result>
														<iso:Response>9000</iso:Response>
													</iso:ModifyVerificationDataResponse>
												</iso:APIResponse>
											</iso:CardCall>
										</iso:FixedProcedure>
									</iso:StateTransition>
								</iso:State>

								<iso:State StateName="PIN.CH_LeerPIN2" StateClass="NotOperational">
									<iso:StateTransition TargetState="PIN.CH_regularPassword-RC3">
										<!-- As specified in [eGK-1#9.2.5] the transition from the transport state to the operational
											 state (regularPassword) is performed using a CHANGE REFERENCE DATA with P1='00' and OldSecret='20FF FFFF FFFF FFFF' (cf. [eGK-1#15.6.1.2]):
											 CL ='00' -
											 INS='24' - CHANGE REFERENCE DATA
											 P1 ='00' -
											 P2 ='01' - Key Reference of the PIN (as <iso:KeyRef>01</iso:KeyRef> is specified above)
											 Data = OldPin | NewPIN = '20FF FFFF FFFF FFFF' | operational PIN, where the operational PIN MUST be captured and appended to the CommandAPDU below

											 This step is realized by invoking the ModifyVerificationData-function defined in [eCard-6].
										-->
										<iso:FixedProcedure>
											<iso:CardCall>
												<iso:APICall>
													<iso:ModifyVerificationData>
														<iso:SlotHandle></iso:SlotHandle>
														<iso:InputUnit>
															<iso:PinInput>
																<iso:Index>0</iso:Index>
																<iso:PasswordAttributes>
																	<!-- See [eGK-1#9.1.7]. -->
																	<iso:pwdFlags>needs-padding</iso:pwdFlags>
																	<iso:pwdType>iso9564-1</iso:pwdType>
																	<iso:minLength>6</iso:minLength> <!-- See [eGK-2#6.2.7] -->
																	<iso:storedLength>8</iso:storedLength>
																	<iso:maxLength>8</iso:maxLength>
																	<iso:padChar>FF</iso:padChar>
																</iso:PasswordAttributes>
															</iso:PinInput>
														</iso:InputUnit>
														<iso:OldReferenceData>20FFFFFFFFFFFFFF</iso:OldReferenceData>
														<iso:Template>00240001</iso:Template>
													</iso:ModifyVerificationData>
												</iso:APICall>
												<iso:APIResponse>
													<iso:ModifyVerificationDataResponse Profile="http://www.bsi.bund.de/ecard/api/1.1">
														<dss:Result>
															<dss:ResultMajor>http://www.bsi.bund.de/ecard/api/1.1/resultmajor#ok</dss:ResultMajor>
														</dss:Result>
														<iso:Response>9000</iso:Response>
													</iso:ModifyVerificationDataResponse>
												</iso:APIResponse>
											</iso:CardCall>
										</iso:FixedProcedure>
									</iso:StateTransition>
								</iso:State>

								<iso:State StateName="PIN.CH_TransportPIN0000" StateClass="NotOperational">
									<iso:StateTransition TargetState="PIN.CH_regularPassword-RC3">
										<!-- As specified in [eGK-1#9.2.5] the transition from the transport state to the operational
											 state (regularPassword) is performed using a CHANGE REFERENCE DATA with P1='00' and OldSecret='2400 00FF FFFF FFFF' (cf. [eGK-1#15.6.1.2]):
											 CL ='00' -
											 INS='24' - CHANGE REFERENCE DATA
											 P1 ='00' -
											 P2 ='01' - Key Reference of the PIN (as <iso:KeyRef>01</iso:KeyRef> is specified above)
											 Data = OldPin | NewPIN = '2400 00FF FFFF FFFF' | operational PIN, where the operational PIN MUST be captured and appended to the CommandAPDU below

											 This step is realized by invoking the ModifyVerificationData-function defined in [eCard-6].
										-->
										<iso:FixedProcedure>
											<iso:CardCall>
												<iso:APICall>
													<iso:ModifyVerificationData>
														<iso:SlotHandle></iso:SlotHandle>
														<iso:InputUnit>
															<iso:PinInput>
																<iso:Index>0</iso:Index>
																<iso:PasswordAttributes>
																	<!-- See [eGK-1#9.1.7]. -->
																	<iso:pwdFlags>needs-padding</iso:pwdFlags>
																	<iso:pwdType>iso9564-1</iso:pwdType>
																	<iso:minLength>6</iso:minLength> <!-- See [eGK-2#6.2.7] -->
																	<iso:storedLength>8</iso:storedLength>
																	<iso:maxLength>8</iso:maxLength>
																	<iso:padChar>FF</iso:padChar>
																</iso:PasswordAttributes>
															</iso:PinInput>
														</iso:InputUnit>
														<iso:OldReferenceData>240000FFFFFFFFFF</iso:OldReferenceData>
														<iso:Template>00240001</iso:Template>
													</iso:ModifyVerificationData>
												</iso:APICall>
												<iso:APIResponse>
													<iso:ModifyVerificationDataResponse Profile="http://www.bsi.bund.de/ecard/api/1.1">
														<dss:Result>
															<dss:ResultMajor>http://www.bsi.bund.de/ecard/api/1.1/resultmajor#ok</dss:ResultMajor>
														</dss:Result>
														<iso:Response>9000</iso:Response>
													</iso:ModifyVerificationDataResponse>
												</iso:APIResponse>
											</iso:CardCall>
										</iso:FixedProcedure>
									</iso:StateTransition>
								</iso:State>

								<iso:State StateName="PIN.CH_regularPassword-verified" StateClass="Operational">
									<iso:RetryCounter>3</iso:RetryCounter>
								</iso:State>

								<iso:State StateName="PIN.CH_regularPassword-RC3" StateClass="Operational">
									<iso:RetryCounter>3</iso:RetryCounter>
								</iso:State>

								<iso:State StateName="PIN.CH_regularPassword-RC2" StateClass="Operational">
									<iso:RetryCounter>2</iso:RetryCounter>
								</iso:State>

								<iso:State StateName="PIN.CH_regularPassword-RC1" StateClass="Operational">
									<iso:RetryCounter>1</iso:RetryCounter>
								</iso:State>

								<iso:State StateName="PIN.CH_blocked" StateClass="NotOperational">
									<iso:RetryCounter>0</iso:RetryCounter>

									<!-- As specified in [eGK-2#6.2.7] the command RESET RETRY COUNTER may be used with P1='00' and P1='01' (cf. [eGK-1#15.6.5]):
										 CL ='00' -
										 INS='2C' - RESET RETRY COUNTER
										 P1 = either
										 '00' - Data contains PUK and new PIN
										 '01' - Data contains PUK only
										 P2 ='01' - Key Reference of the PIN (as <iso:KeyRef>01</iso:KeyRef> is specified above)
										 Data = either
										 PUK | NewPIN, if P1='00'
										 PUK         , if P1='01'

										 This step is realized by invoking the ModifyVerificationData-function defined in [eCard-6].
									-->
									<iso:StateTransition TargetState="PIN.CH_regularPassword-RC3">
										<iso:FixedProcedure>
											<!-- Case P1='00' (PUK and PIN) -->
											<iso:CardCall>
												<iso:APICall>
													<iso:ModifyVerificationData>
														<iso:SlotHandle></iso:SlotHandle>
														<iso:InputUnit>
															<iso:PinInput>
																<iso:Index>0</iso:Index>
																<iso:PasswordAttributes>
																	<!-- See [eGK-1#9.1.7]. -->
																	<iso:pwdFlags>needs-padding</iso:pwdFlags>
																	<iso:pwdType>iso9564-1</iso:pwdType>
																	<iso:minLength>6</iso:minLength> <!-- See [eGK-2#6.2.7] -->
																	<iso:storedLength>8</iso:storedLength>
																	<iso:maxLength>8</iso:maxLength>
																	<iso:padChar>FF</iso:padChar>
																</iso:PasswordAttributes>
															</iso:PinInput>
														</iso:InputUnit>
														<iso:Template>002C0001</iso:Template>
													</iso:ModifyVerificationData>
												</iso:APICall>
												<iso:APIResponse>
													<iso:ModifyVerificationDataResponse Profile="http://www.bsi.bund.de/ecard/api/1.1">
														<dss:Result>
															<dss:ResultMajor>http://www.bsi.bund.de/ecard/api/1.1/resultmajor#ok</dss:ResultMajor>
														</dss:Result>
														<iso:Response>9000</iso:Response>
													</iso:ModifyVerificationDataResponse>
												</iso:APIResponse>
											</iso:CardCall>
										</iso:FixedProcedure>
									</iso:StateTransition>
									<iso:StateTransition TargetState="PIN.CH_regularPassword-RC3">
										<iso:FixedProcedure>
											<!-- Case P1='01' (PUK only) -->
											<iso:CardCall>
												<iso:APICall>
													<iso:ModifyVerificationData>
														<iso:SlotHandle></iso:SlotHandle>
														<iso:InputUnit>
															<iso:PinInput>
																<iso:Index>0</iso:Index>
																<iso:PasswordAttributes>
																	<!-- See [eGK-1#9.1.7]. -->
																	<iso:pwdFlags>needs-padding</iso:pwdFlags>
																	<iso:pwdType>iso9564-1</iso:pwdType>
																	<iso:minLength>6</iso:minLength> <!-- See [eGK-2#6.2.7] -->
																	<iso:storedLength>8</iso:storedLength>
																	<iso:maxLength>8</iso:maxLength>
																	<iso:padChar>FF</iso:padChar>
																</iso:PasswordAttributes>
															</iso:PinInput>
														</iso:InputUnit>
														<iso:Template>002C0101</iso:Template>
													</iso:ModifyVerificationData>
												</iso:APICall>
												<iso:APIResponse>
													<iso:ModifyVerificationDataResponse Profile="http://www.bsi.bund.de/ecard/api/1.1">
														<dss:Result>
															<dss:ResultMajor>http://www.bsi.bund.de/ecard/api/1.1/resultmajor#ok</dss:ResultMajor>
														</dss:Result>
														<iso:Response>9000</iso:Response>
													</iso:ModifyVerificationDataResponse>
												</iso:APIResponse>
											</iso:CardCall>
										</iso:FixedProcedure>
									</iso:StateTransition>
								</iso:State>
							</iso:StateInfo>
						</iso:PinCompareMarker>
					</iso:DIDMarker>
					<iso:DIDScope>global</iso:DIDScope>
				</iso:DifferentialIdentity>
				<iso:DIDACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDGet</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDUpdate</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:DIDAuthentication>
								<iso:DIDName>PIN.CH</iso:DIDName>
								<iso:DIDState>true</iso:DIDState>
							</iso:DIDAuthentication>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDAuthenticate</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DIDACL>
			</iso:DIDInfo>


			<!--PIN.home-->
			<iso:DIDInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DifferentialIdentity>
					<iso:DIDName>PIN.home</iso:DIDName>
					<iso:DIDProtocol>urn:oid:1.3.162.15480.3.0.9</iso:DIDProtocol>
					<!--PIN Compare-->
					<iso:DIDMarker>
						<iso:PinCompareMarker
							Protocol="urn:oid:1.3.162.15480.3.0.9">
							<iso:PinRef>
								<iso:KeyRef>02</iso:KeyRef>
							</iso:PinRef>
							<iso:PasswordAttributes>
								<!-- See [eGK-1#9.1.7]. -->
								<iso:pwdFlags>needs-padding</iso:pwdFlags>
								<iso:pwdType>iso9564-1</iso:pwdType>
								<iso:minLength>6</iso:minLength> <!-- See [eGK-2#6.2.8]. -->
								<iso:storedLength>8</iso:storedLength>
								<iso:maxLength>8</iso:maxLength>
								<iso:padChar>FF</iso:padChar>
							</iso:PasswordAttributes>
							<!--
								The different states may be distinguished by calling the GET PIN STATUS
								function according to [eGK-1#15.6.4]:

								CL ='80' - as it is a proprietary command
								INS='20' - just as VERIFY
								P1 ='00'
								P2 ='02' - Key Reference of the PIN (as <iso:KeyRef>02</iso:KeyRef> is specified above)

								The status of the PIN is indicated in the response of the GET PIN STATUS command
								(cf. [eGK-1#15.6.4.2]), where according to [eGK-2#6.2.8] there are four states to distinguish:
								- regularPassword - means that the PIN is operational (Response=63Cx, where x is RetryCounter)
								- Leer–PIN_1 (LeerPIN1) - transport state, which can be resumed with CHANGE REFERENCE DATA with P1='01' (Response=62C7)
								- Leer–PIN_2 (LeerPIN2) - transport state, which can be resumed with CHANGE REFERENCE DATA with P1='00' and OldSecret='20FF FFFF FFFF FFFF' (Response=62C4)
								- Transport–PIN_0000 (TransportPIN0000) - transport state, which can be resumed with CHANGE REFERENCE DATA with P1='00' and OldSecret='2400 00FF FFFF FFFF'  (Response=62CF)
							-->

							<iso:StateInfo>
								<iso:StateRecognition>
									<iso:CardCall>
										<iso:CommandAPDU>80200002</iso:CommandAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>62C7</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.home_LeerPIN1</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>62C4</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.home_LeerPIN2</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>62CF</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.home_TransportPIN0000</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>9000</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.home_regularPassword-verified</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>63C3</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.home_regularPassword-RC3</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>63C2</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.home_regularPassword-RC2</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>63C1</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.home_regularPassword-RC1</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
										<iso:ResponseAPDU>
											<iso:Trailer>63C0</iso:Trailer>
											<iso:Conclusion>
												<iso:RecognizedState>PIN.home_blocked</iso:RecognizedState>
											</iso:Conclusion>
										</iso:ResponseAPDU>
									</iso:CardCall>
								</iso:StateRecognition>

								<!-- Start state to trigger recognition -->
								<iso:State StateName="PIN.home_start" StateClass="RecognitionNecessary" />

								<iso:State StateName="PIN.home_LeerPIN1" StateClass="NotOperational">
									<iso:StateTransition TargetState="PIN.home_regularPassword-RC3">
										<!-- As specified in [eGK-2#6.2.8] the transition from the transport state to the operational
											 state (regularPassword) is performed using a CHANGE REFERENCE DATA with P1='01' (cf. [eGK-1#15.6.1.2]):
											 CL ='00' -
											 INS='24' - CHANGE REFERENCE DATA
											 P1 ='01' -
											 P2 ='02' - Key Reference of the PIN (as <iso:KeyRef>02</iso:KeyRef> is specified above)
											 Data = operational PIN, which must be captured and appended to CommandAPDU below

											 This step is realized by invoking the ModifyVerificationData-function defined in [eCard-6].
										-->
										<iso:FixedProcedure>
											<iso:CardCall>
												<iso:APICall>
													<iso:ModifyVerificationData>
														<iso:SlotHandle></iso:SlotHandle>
														<iso:InputUnit>
															<iso:PinInput>
																<iso:Index>0</iso:Index>
																<iso:PasswordAttributes>
																	<!-- See [eGK-1#9.1.7]. -->
																	<iso:pwdFlags>needs-padding</iso:pwdFlags>
																	<iso:pwdType>iso9564-1</iso:pwdType>
																	<iso:minLength>6</iso:minLength> <!-- See [eGK-2#6.2.7] -->
																	<iso:storedLength>8</iso:storedLength>
																	<iso:maxLength>8</iso:maxLength>
																	<iso:padChar>FF</iso:padChar>
																</iso:PasswordAttributes>
															</iso:PinInput>
														</iso:InputUnit>
														<iso:Template>00240102</iso:Template>
													</iso:ModifyVerificationData>
												</iso:APICall>
												<iso:APIResponse>
													<iso:ModifyVerificationDataResponse Profile="http://www.bsi.bund.de/ecard/api/1.1">
														<dss:Result>
															<dss:ResultMajor>http://www.bsi.bund.de/ecard/api/1.1/resultmajor#ok</dss:ResultMajor>
														</dss:Result>
														<iso:Response>9000</iso:Response>
													</iso:ModifyVerificationDataResponse>
												</iso:APIResponse>
											</iso:CardCall>
										</iso:FixedProcedure>
									</iso:StateTransition>
								</iso:State>

								<iso:State StateName="PIN.home_LeerPIN2" StateClass="NotOperational">
									<iso:StateTransition TargetState="PIN.home_regularPassword-RC3">
										<!-- As specified in [eGK-1#9.2.5] the transition from the transport state to the operational
											 state (regularPassword) is performed using a CHANGE REFERENCE DATA with P1='00' and OldSecret='20FF FFFF FFFF FFFF' (cf. [eGK-1#15.6.1.2]):
											 CL ='00' -
											 INS='24' - CHANGE REFERENCE DATA
											 P1 ='00' -
											 P2 ='02' - Key Reference of the PIN (as <iso:KeyRef>02</iso:KeyRef> is specified above)
											 Data = OldPin | NewPIN = '20FF FFFF FFFF FFFF' | operational PIN, where the operational PIN MUST be captured and appended to the CommandAPDU below

											 This step is realized by invoking the ModifyVerificationData-function defined in [eCard-6].
										-->
										<iso:FixedProcedure>
											<iso:CardCall>
												<iso:APICall>
													<iso:ModifyVerificationData>
														<iso:SlotHandle></iso:SlotHandle>
														<iso:InputUnit>
															<iso:PinInput>
																<iso:Index>0</iso:Index>
																<iso:PasswordAttributes>
																	<!-- See [eGK-1#9.1.7]. -->
																	<iso:pwdFlags>needs-padding</iso:pwdFlags>
																	<iso:pwdType>iso9564-1</iso:pwdType>
																	<iso:minLength>6</iso:minLength> <!-- See [eGK-2#6.2.7] -->
																	<iso:storedLength>8</iso:storedLength>
																	<iso:maxLength>8</iso:maxLength>
																	<iso:padChar>FF</iso:padChar>
																</iso:PasswordAttributes>
															</iso:PinInput>
														</iso:InputUnit>
														<iso:OldReferenceData>20FFFFFFFFFFFFFF</iso:OldReferenceData>
														<iso:Template>00240002</iso:Template>
													</iso:ModifyVerificationData>
												</iso:APICall>
												<iso:APIResponse>
													<iso:ModifyVerificationDataResponse Profile="http://www.bsi.bund.de/ecard/api/1.1">
														<dss:Result>
															<dss:ResultMajor>http://www.bsi.bund.de/ecard/api/1.1/resultmajor#ok</dss:ResultMajor>
														</dss:Result>
														<iso:Response>9000</iso:Response>
													</iso:ModifyVerificationDataResponse>
												</iso:APIResponse>
											</iso:CardCall>
										</iso:FixedProcedure>
									</iso:StateTransition>
								</iso:State>

								<iso:State StateName="PIN.home_TransportPIN0000" StateClass="NotOperational">
									<iso:StateTransition TargetState="PIN.home_regularPassword-RC3">
										<!-- As specified in [eGK-1#9.2.5] the transition from the transport state to the operational
											 state (regularPassword) is performed using a CHANGE REFERENCE DATA with P1='00' and OldSecret='2400 00FF FFFF FFFF' (cf. [eGK-1#15.6.1.2]):
											 CL ='00' -
											 INS='24' - CHANGE REFERENCE DATA
											 P1 ='00' -
											 P2 ='02' - Key Reference of the PIN (as <iso:KeyRef>02</iso:KeyRef> is specified above)
											 Data = OldPin | NewPIN = '2400 00FF FFFF FFFF' | operational PIN, where the operational PIN MUST be captured and appended to the CommandAPDU below

											 This step is realized by invoking the ModifyVerificationData-function defined in [eCard-6].
										-->
										<iso:FixedProcedure>
											<iso:CardCall>
												<iso:APICall>
													<iso:ModifyVerificationData>
														<iso:SlotHandle></iso:SlotHandle>
														<iso:InputUnit>
															<iso:PinInput>
																<iso:Index>0</iso:Index>
																<iso:PasswordAttributes>
																	<!-- See [eGK-1#9.1.7]. -->
																	<iso:pwdFlags>needs-padding</iso:pwdFlags>
																	<iso:pwdType>iso9564-1</iso:pwdType>
																	<iso:minLength>6</iso:minLength> <!-- See [eGK-2#6.2.7] -->
																	<iso:storedLength>8</iso:storedLength>
																	<iso:maxLength>8</iso:maxLength>
																	<iso:padChar>FF</iso:padChar>
																</iso:PasswordAttributes>
															</iso:PinInput>
														</iso:InputUnit>
														<iso:OldReferenceData>240000FFFFFFFFFF</iso:OldReferenceData>
														<iso:Template>00240002</iso:Template>
													</iso:ModifyVerificationData>
												</iso:APICall>
												<iso:APIResponse>
													<iso:ModifyVerificationDataResponse Profile="http://www.bsi.bund.de/ecard/api/1.1">
														<dss:Result>
															<dss:ResultMajor>http://www.bsi.bund.de/ecard/api/1.1/resultmajor#ok</dss:ResultMajor>
														</dss:Result>
														<iso:Response>9000</iso:Response>
													</iso:ModifyVerificationDataResponse>
												</iso:APIResponse>
											</iso:CardCall>
										</iso:FixedProcedure>
									</iso:StateTransition>
								</iso:State>

								<iso:State StateName="PIN.home_regularPassword-verified" StateClass="Operational">
									<iso:RetryCounter>3</iso:RetryCounter>
								</iso:State>

								<iso:State StateName="PIN.home_regularPassword-RC3" StateClass="Operational">
									<iso:RetryCounter>3</iso:RetryCounter>
								</iso:State>

								<iso:State StateName="PIN.home_regularPassword-RC2" StateClass="Operational">
									<iso:RetryCounter>2</iso:RetryCounter>
								</iso:State>

								<iso:State StateName="PIN.home_regularPassword-RC1" StateClass="Operational">
									<iso:RetryCounter>1</iso:RetryCounter>
								</iso:State>

								<iso:State StateName="PIN.home_blocked" StateClass="NotOperational">
									<iso:RetryCounter>0</iso:RetryCounter>
									<!-- As specified in [eGK-2#6.2.8] the command RESET RETRY COUNTER may be used with P1='00' and P1='01' (cf. [eGK-1#15.6.5]):
										 CL ='00' -
										 INS='2C' - RESET RETRY COUNTER
										 P1 = either
										 '00' - Data contains PUK and new PIN
										 '01' - Data contains PUK only
										 P2 ='02' - Key Reference of the PIN (as <iso:KeyRef>02</iso:KeyRef> is specified above)
										 Data = either
										 PUK | NewPIN, if P1='00'
										 PUK         , if P1='01'

										 This step is realized by invoking the ModifyVerificationData-function defined in [eCard-6].
									-->
									<iso:StateTransition TargetState="PIN.home_regularPassword-RC3">
										<iso:FixedProcedure>
											<!-- Case P1='00' (PUK and PIN) -->
											<iso:CardCall>
												<iso:APICall>
													<iso:ModifyVerificationData>
														<iso:SlotHandle></iso:SlotHandle>
														<iso:InputUnit>
															<iso:PinInput>
																<iso:Index>0</iso:Index>
																<iso:PasswordAttributes>
																	<!-- See [eGK-1#9.1.7]. -->
																	<iso:pwdFlags>needs-padding</iso:pwdFlags>
																	<iso:pwdType>iso9564-1</iso:pwdType>
																	<iso:minLength>6</iso:minLength> <!-- See [eGK-2#6.2.7] -->
																	<iso:storedLength>8</iso:storedLength>
																	<iso:maxLength>8</iso:maxLength>
																	<iso:padChar>FF</iso:padChar>
																</iso:PasswordAttributes>
															</iso:PinInput>
														</iso:InputUnit>
														<iso:Template>002C0002</iso:Template>
													</iso:ModifyVerificationData>
												</iso:APICall>
												<iso:APIResponse>
													<iso:ModifyVerificationDataResponse Profile="http://www.bsi.bund.de/ecard/api/1.1">
														<dss:Result>
															<dss:ResultMajor>http://www.bsi.bund.de/ecard/api/1.1/resultmajor#ok</dss:ResultMajor>
														</dss:Result>
														<iso:Response>9000</iso:Response>
													</iso:ModifyVerificationDataResponse>
												</iso:APIResponse>
											</iso:CardCall>
										</iso:FixedProcedure>
									</iso:StateTransition>
									<iso:StateTransition TargetState="PIN.home_regularPassword-RC3">
										<iso:FixedProcedure>
											<!-- Case P1='01' (PUK only) -->
											<iso:CardCall>
												<iso:APICall>
													<iso:ModifyVerificationData>
														<iso:SlotHandle></iso:SlotHandle>
														<iso:InputUnit>
															<iso:PinInput>
																<iso:Index>0</iso:Index>
																<iso:PasswordAttributes>
																	<!-- See [eGK-1#9.1.7]. -->
																	<iso:pwdFlags>needs-padding</iso:pwdFlags>
																	<iso:pwdType>iso9564-1</iso:pwdType>
																	<iso:minLength>6</iso:minLength> <!-- See [eGK-2#6.2.7] -->
																	<iso:storedLength>8</iso:storedLength>
																	<iso:maxLength>8</iso:maxLength>
																	<iso:padChar>FF</iso:padChar>
																</iso:PasswordAttributes>
															</iso:PinInput>
														</iso:InputUnit>
														<iso:Template>002C0102</iso:Template>
													</iso:ModifyVerificationData>
												</iso:APICall>
												<iso:APIResponse>
													<iso:ModifyVerificationDataResponse Profile="http://www.bsi.bund.de/ecard/api/1.1">
														<dss:Result>
															<dss:ResultMajor>http://www.bsi.bund.de/ecard/api/1.1/resultmajor#ok</dss:ResultMajor>
														</dss:Result>
														<iso:Response>9000</iso:Response>
													</iso:ModifyVerificationDataResponse>
												</iso:APIResponse>
											</iso:CardCall>
										</iso:FixedProcedure>
									</iso:StateTransition>
								</iso:State>
							</iso:StateInfo>
						</iso:PinCompareMarker>
					</iso:DIDMarker>
					<iso:DIDScope>global</iso:DIDScope>
				</iso:DifferentialIdentity>
				<iso:DIDACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDGet</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDUpdate</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:DIDAuthentication>
								<iso:DIDName>PIN.home</iso:DIDName>
								<iso:DIDState>true</iso:DIDState>
							</iso:DIDAuthentication>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDAuthenticate</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DIDACL>
			</iso:DIDInfo>

			<!--PrK.eGK.AUT with rsaRoleAuthentication (corresponding to SE#01) -->
			<iso:DIDInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DifferentialIdentity>
					<iso:DIDName>PrK.eGK.AUT_rsaRoleAuthentication</iso:DIDName>
					<iso:DIDProtocol>urn:oid:1.3.162.15480.3.0.15</iso:DIDProtocol>
					<iso:DIDMarker>
						<iso:RSAAuthMarker
							Protocol="urn:oid:1.3.162.15480.3.0.15">
							<iso:CardAlgId>00</iso:CardAlgId> <!-- See [eGK-1#17.1]. -->
							<iso:NonceSize>8</iso:NonceSize>
							<iso:KeyRef> <!-- See [eGK-2#6.2.9]. -->
								<iso:KeyRef>10</iso:KeyRef>
							</iso:KeyRef>
							<iso:CertificateRef>
								<iso:DataSetName>EF.C.CA_eGK.CS</iso:DataSetName>
							</iso:CertificateRef>
							<iso:CertificateRef>
								<iso:DataSetName>EF.C.eGK.AUT_CVC</iso:DataSetName>
							</iso:CertificateRef>
							<iso:ICCSNRef>
								<iso:DataSetName>EF.GDO</iso:DataSetName>
							</iso:ICCSNRef>
						</iso:RSAAuthMarker>
					</iso:DIDMarker>
					<iso:DIDScope>global</iso:DIDScope>
				</iso:DifferentialIdentity>
				<iso:DIDACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDGet</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDAuthenticate</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DIDACL>
			</iso:DIDInfo>

			<!--PrK.eGK.AUT with rsaSessionkey4SM (corresponding to SE#02) -->
			<iso:DIDInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DifferentialIdentity>
					<iso:DIDName>PrK.eGK.AUT_rsaSessionkey4SM</iso:DIDName>
					<iso:DIDProtocol>urn:oid:1.3.162.15480.3.0.15</iso:DIDProtocol>
					<iso:DIDMarker>
						<iso:RSAAuthMarker
							Protocol="urn:oid:1.3.162.15480.3.0.15">
							<iso:CardAlgId>54</iso:CardAlgId> <!-- See [eGK-1#17.1]. -->
							<iso:NonceSize>8</iso:NonceSize>
							<iso:KeyRef> <!-- See [eGK-2#6.2.9]. -->
								<iso:KeyRef>10</iso:KeyRef>
							</iso:KeyRef>
							<iso:CertificateRef>
								<iso:DataSetName>EF.C.CA_eGK.CS</iso:DataSetName>
							</iso:CertificateRef>
							<iso:CertificateRef>
								<iso:DataSetName>EF.C.eGK.AUT_CVC</iso:DataSetName>
							</iso:CertificateRef>
							<iso:ICCSNRef>
								<iso:DataSetName>EF.GDO</iso:DataSetName>
							</iso:ICCSNRef>
						</iso:RSAAuthMarker>
					</iso:DIDMarker>
					<iso:DIDScope>global</iso:DIDScope>
				</iso:DifferentialIdentity>
				<iso:DIDACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDGet</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDAuthenticate</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DIDACL>
			</iso:DIDInfo>

			<!--SK.CMS-->
			<iso:DIDInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DifferentialIdentity>
					<iso:DIDName>SK.CMS</iso:DIDName>
					<iso:DIDProtocol>urn:oid:1.3.162.15480.3.0.12</iso:DIDProtocol>
					<iso:DIDMarker>
						<iso:MutualAuthMarker
							Protocol="urn:oid:1.3.162.15480.3.0.12">
							<iso:KeyEncMacRef>13</iso:KeyEncMacRef>
							<iso:ICCSNRef>
								<iso:DataSetName>EF.GDO</iso:DataSetName>
							</iso:ICCSNRef>
						</iso:MutualAuthMarker>
					</iso:DIDMarker>
					<iso:DIDScope>global</iso:DIDScope>
				</iso:DifferentialIdentity>
				<iso:DIDACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDAuthenticate</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DIDACL>
			</iso:DIDInfo>


			<!--SK.VSD-->
			<iso:DIDInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DifferentialIdentity>
					<iso:DIDName>SK.VSD</iso:DIDName>
					<iso:DIDProtocol>urn:oid:1.3.162.15480.3.0.12</iso:DIDProtocol>
					<iso:DIDMarker>
						<iso:MutualAuthMarker
							Protocol="urn:oid:1.3.162.15480.3.0.12">
							<iso:KeyEncMacRef>18</iso:KeyEncMacRef>
							<iso:ICCSNRef>
								<iso:DataSetName>EF.GDO</iso:DataSetName>
							</iso:ICCSNRef>
						</iso:MutualAuthMarker>
					</iso:DIDMarker>
					<iso:DIDScope>global</iso:DIDScope>
				</iso:DifferentialIdentity>
				<iso:DIDACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDAuthenticate</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DIDACL>
			</iso:DIDInfo>


			<!--SK.VSDCMS-->
			<iso:DIDInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DifferentialIdentity>
					<iso:DIDName>SK.VSDCMS</iso:DIDName>
					<iso:DIDProtocol>urn:oid:1.3.162.15480.3.0.12</iso:DIDProtocol>
					<iso:DIDMarker>
						<iso:MutualAuthMarker
							Protocol="urn:oid:1.3.162.15480.3.0.12">
							<iso:KeyEncMacRef>20</iso:KeyEncMacRef>
							<iso:ICCSNRef>
								<iso:DataSetName>EF.GDO</iso:DataSetName>
							</iso:ICCSNRef>
						</iso:MutualAuthMarker>
					</iso:DIDMarker>
					<iso:DIDScope>global</iso:DIDScope>
				</iso:DifferentialIdentity>
				<iso:DIDACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>DifferentialIdentityService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:DifferentialIdentityServiceAction>DIDAuthenticate</iso:DifferentialIdentityServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DIDACL>
			</iso:DIDInfo>


			<!-- ================ -->
			<!-- IRMA: Data Sets  -->
			<!-- ================ -->

			<!-- EF.ATR (cf. [eGK-2#6.2.1]) -->
			<iso:DataSetInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DataSetName>EF.ATR</iso:DataSetName>
				<iso:DataSetACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DataSetSelect</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DSIRead</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DataSetACL>
				<iso:DataSetPath>
					<iso:efIdOrPath>2F01</iso:efIdOrPath>
				</iso:DataSetPath>
			</iso:DataSetInfo>

			<!-- EF.C.CA_eGK.CS (cf. [eGK-2#6.2.2]) -->
			<iso:DataSetInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DataSetName>EF.C.CA_eGK.CS</iso:DataSetName>
				<iso:DataSetACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DataSetSelect</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DSIRead</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DataSetACL>
				<iso:DataSetPath>
					<iso:efIdOrPath>2F04</iso:efIdOrPath>
				</iso:DataSetPath>
			</iso:DataSetInfo>

			<!-- EF.C.eGK.AUT_CVC (cf. [eGK-2#6.2.3]) -->
			<iso:DataSetInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DataSetName>EF.C.eGK.AUT_CVC</iso:DataSetName>
				<iso:DataSetACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DataSetSelect</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DSIRead</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DataSetACL>
				<iso:DataSetPath>
					<iso:efIdOrPath>2F03</iso:efIdOrPath>
				</iso:DataSetPath>
			</iso:DataSetInfo>

			<!-- EF.DIR (cf. [eGK-2#6.2.4]) -->
			<iso:DataSetInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DataSetName>EF.DIR</iso:DataSetName>
				<iso:DataSetACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DataSetSelect</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DSIList</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DSIRead</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DataSetACL>
				<iso:DataSetPath>
					<iso:efIdOrPath>2F00</iso:efIdOrPath>
				</iso:DataSetPath>
			</iso:DataSetInfo>

			<!-- EF.GDO (cf. [eGK-2#6.2.5]) -->
			<iso:DataSetInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DataSetName>EF.GDO</iso:DataSetName>
				<iso:DataSetACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DataSetSelect</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DSIRead</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DataSetACL>
				<iso:DataSetPath>
					<iso:efIdOrPath>2F02</iso:efIdOrPath>
				</iso:DataSetPath>
			</iso:DataSetInfo>

			<!-- EF.Version (cf. [eGK-2#6.2.6]) -->
			<iso:DataSetInfo>
				<iso:RequirementLevel>PersonalizationMandatory</iso:RequirementLevel>
				<iso:DataSetName>EF.Version</iso:DataSetName>
				<iso:DataSetACL>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DataSetSelect</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DSIList</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DSIRead</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:always>true</iso:always>
						</iso:SecurityCondition>
					</iso:AccessRule>
					<iso:AccessRule>
						<iso:CardApplicationServiceName>NamedDataService</iso:CardApplicationServiceName>
						<iso:Action>
							<iso:NamedDataServiceAction>DSIWrite</iso:NamedDataServiceAction>
						</iso:Action>
						<iso:SecurityCondition>
							<iso:or>
								<iso:SecurityCondition>
									<iso:DIDAuthentication>
										<iso:DIDName>SK.CMS</iso:DIDName>
										<iso:DIDState>true</iso:DIDState>
									</iso:DIDAuthentication>
								</iso:SecurityCondition>
								<iso:SecurityCondition>
									<iso:DIDAuthentication>
										<iso:DIDName>SK.VSDCMS</iso:DIDName>
										<iso:DIDState>true</iso:DIDState>
									</iso:DIDAuthentication>
								</iso:SecurityCondition>
							</iso:or>
						</iso:SecurityCondition>
					</iso:AccessRule>
				</iso:DataSetACL>
				<iso:DataSetPath>
					<iso:efIdOrPath>2F10</iso:efIdOrPath>
				</iso:DataSetPath>
			</iso:DataSetInfo>
		</iso:CardApplication>
	</iso:ApplicationCapabilities>
</iso:CardInfo>
